[0.000000] (-) TimerEvent: {}
[0.000381] (challenge) JobQueued: {'identifier': 'challenge', 'dependencies': OrderedDict()}
[0.000452] (challenge) JobStarted: {'identifier': 'challenge'}
[0.012490] (challenge) JobProgress: {'identifier': 'challenge', 'progress': 'cmake'}
[0.013832] (challenge) JobProgress: {'identifier': 'challenge', 'progress': 'build'}
[0.014621] (challenge) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/navrajb/software/software-start-here/build/challenge', '--', '-j8', '-l8'], 'cwd': '/home/navrajb/software/software-start-here/build/challenge', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_CA:en'), ('USER', 'navrajb'), ('SSH_AGENT_PID', '1633'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/navrajb'), ('OLDPWD', '/home/navrajb'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1447'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('_colcon_cd_root', '/opt/ros/foxy/'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'navrajb'), ('JOURNAL_STREAM', '8:48594'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'navrajb'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/navrajb-Precision-3520:@/tmp/.ICE-unix/1670,unix/navrajb-Precision-3520:/tmp/.ICE-unix/1670'), ('INVOCATION_ID', 'ae34e5ea13634dd68519c0f453d247f7'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/d52c58c2_a361_44d9_9f34_ec08861f2155'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.115'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '0'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/navrajb/software/software-start-here/build/challenge'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/foxy')]), 'shell': False}
[0.066725] (challenge) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target solution\x1b[0m\n'}
[0.098742] (challenge) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/solution.dir/src/solution.cpp.o\x1b[0m\n'}
[0.099055] (-) TimerEvent: {}
[0.199343] (-) TimerEvent: {}
[0.299695] (-) TimerEvent: {}
[0.400005] (-) TimerEvent: {}
[0.500328] (-) TimerEvent: {}
[0.600641] (-) TimerEvent: {}
[0.700934] (-) TimerEvent: {}
[0.801232] (-) TimerEvent: {}
[0.901530] (-) TimerEvent: {}
[1.001809] (-) TimerEvent: {}
[1.102111] (-) TimerEvent: {}
[1.202397] (-) TimerEvent: {}
[1.302689] (-) TimerEvent: {}
[1.338339] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid MinimalPublisher::timer_callback()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.339013] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:32:96:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[1.339101] (challenge) StderrLine: {'line': b'   32 | e_publisher<geometry_msgs::msg::Twist()>("/turtle1/cmd_vel",1\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[1.339173] (challenge) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.339238] (challenge) StderrLine: {'line': b'\n'}
[1.339302] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[1.339365] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:4\x1b[m\x1b[K:\n'}
[1.339428] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:309:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.339494] (challenge) StderrLine: {'line': b'  309 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[1.339557] (challenge) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.339618] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:309:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.339705] (challenge) StderrLine: {'line': b'  309 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[1.339773] (challenge) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.339835] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:313:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.339900] (challenge) StderrLine: {'line': b'  313 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[1.339962] (challenge) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.340023] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:313:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.340088] (challenge) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >&; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.340153] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:313:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.340226] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:32:96:\x1b[m\x1b[K   required from here\n'}
[1.340288] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:111:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.340353] (challenge) StderrLine: {'line': b'  111 |  using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[1.340419] (challenge) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.340482] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:324:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.340552] (challenge) StderrLine: {'line': b'  324 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[1.340614] (challenge) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.340674] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:324:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.340735] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:32:96:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.340804] (challenge) StderrLine: {'line': b'   32 | e_publisher<geometry_msgs::msg::Twist()>("/turtle1/cmd_vel",1\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.340866] (challenge) StderrLine: {'line': b'      |                                                              \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.340927] (challenge) StderrLine: {'line': b'\n'}
[1.340989] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[1.341051] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:4\x1b[m\x1b[K:\n'}
[1.341113] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:333:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.341177] (challenge) StderrLine: {'line': b'  333 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[1.341240] (challenge) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.341302] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:333:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.341366] (challenge) StderrLine: {'line': b'  333 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[1.341429] (challenge) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[1.341490] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:341:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.341555] (challenge) StderrLine: {'line': b'  341 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[1.341617] (challenge) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.341679] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:341:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.341740] (challenge) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.341809] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:341:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.341881] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:32:96:\x1b[m\x1b[K   required from here\n'}
[1.341944] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:111:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.342009] (challenge) StderrLine: {'line': b'  111 |  using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[1.342077] (challenge) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.342140] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:349:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.342210] (challenge) StderrLine: {'line': b'  349 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[1.342272] (challenge) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.342333] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:349:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.342395] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:32:96:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.342459] (challenge) StderrLine: {'line': b'   32 | e_publisher<geometry_msgs::msg::Twist()>("/turtle1/cmd_vel",1\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.342522] (challenge) StderrLine: {'line': b'      |                                                              \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.342584] (challenge) StderrLine: {'line': b'\n'}
[1.342645] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:33:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.342708] (challenge) StderrLine: {'line': b'   33 |  auto message = geometry_msgs::msg::Twist\x1b[01;31m\x1b[K;\x1b[m\x1b[K\n'}
[1.342771] (challenge) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.402819] (-) TimerEvent: {}
[1.503145] (-) TimerEvent: {}
[1.603447] (-) TimerEvent: {}
[1.703748] (-) TimerEvent: {}
[1.719833] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[1.720069] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[1.720144] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/string:41\x1b[m\x1b[K,\n'}
[1.720210] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/stdexcept:39\x1b[m\x1b[K,\n'}
[1.720273] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/array:39\x1b[m\x1b[K,\n'}
[1.720335] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/tuple:39\x1b[m\x1b[K,\n'}
[1.720406] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/functional:54\x1b[m\x1b[K,\n'}
[1.720468] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:3\x1b[m\x1b[K:\n'}
[1.720529] (challenge) StderrLine: {'line': b'/usr/include/c++/9/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass __gnu_cxx::new_allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.720592] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:111:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.720655] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:84:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<MessageT, AllocatorT>::Publisher(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.720726] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:146:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.720797] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:483:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.720876] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:548:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Alloc = std::allocator<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.720946] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:679:16:\x1b[m\x1b[K   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[1.721008] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:701:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Alloc = std::allocator<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.721080] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:717:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.721145] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher_factory.hpp:76:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::PublisherFactory rclcpp::create_publisher_factory(const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.721209] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/create_publisher.hpp:59:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<PublisherT> rclcpp::create_publisher(NodeT&, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.721277] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:76:68:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.721342] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:32:96:\x1b[m\x1b[K   required from here\n'}
[1.721404] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:96:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst _Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::const_reference) const [with _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >(); __gnu_cxx::new_allocator<_Tp>::const_pointer = geometry_msgs::msg::Twist_<std::allocator<void> > (*)(); __gnu_cxx::new_allocator<_Tp>::const_reference = geometry_msgs::msg::Twist_<std::allocator<void> > (&)()]\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[K_Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::reference) const [with _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >(); __gnu_cxx::new_allocator<_Tp>::pointer = geometry_msgs::msg::Twist_<std::allocator<void> > (*)(); __gnu_cxx::new_allocator<_Tp>::reference = geometry_msgs::msg::Twist_<std::allocator<void> > (&)()]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.721486] (challenge) StderrLine: {'line': b'   96 |       \x1b[01;31m\x1b[Kaddress\x1b[m\x1b[K(const_reference __x) const _GLIBCXX_NOEXCEPT\n'}
[1.721547] (challenge) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.721608] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:92:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[K_Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::reference) const [with _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >(); __gnu_cxx::new_allocator<_Tp>::pointer = geometry_msgs::msg::Twist_<std::allocator<void> > (*)(); __gnu_cxx::new_allocator<_Tp>::reference = geometry_msgs::msg::Twist_<std::allocator<void> > (&)()]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.721672] (challenge) StderrLine: {'line': b'   92 |       \x1b[01;36m\x1b[Kaddress\x1b[m\x1b[K(reference __x) const _GLIBCXX_NOEXCEPT\n'}
[1.721733] (challenge) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.760068] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:26\x1b[m\x1b[K,\n'}
[1.760558] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_base.hpp:29\x1b[m\x1b[K,\n'}
[1.760785] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:26\x1b[m\x1b[K,\n'}
[1.760898] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.761007] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[1.761115] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.761222] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.761328] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[1.761434] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[1.761541] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.761647] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[1.761753] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:10\x1b[m\x1b[K:\n'}
[1.761859] (challenge) StderrLine: {'line': b'/opt/ros/foxy/include/rclcpp/allocator/allocator_common.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid* rclcpp::allocator::retyped_allocate(size_t, void*) [with Alloc = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.761969] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/allocator/allocator_common.hpp:75:26:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krcl_allocator_t rclcpp::allocator::get_rcl_allocator(Alloc&) [with T = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>; typename std::enable_if<(! std::is_same<Alloc, std::allocator<void> >::value)>::type* <anonymous> = 0; rcl_allocator_t = rcutils_allocator_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.762091] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher_options.hpp:78:70:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krcl_publisher_options_t rclcpp::PublisherOptionsWithAllocator<Allocator>::to_rcl_publisher_options(const rclcpp::QoS&) const [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Allocator = std::allocator<void>; rcl_publisher_options_t = rcl_publisher_options_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.762205] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:84:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<MessageT, AllocatorT>::Publisher(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.762316] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:146:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.762441] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:483:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.762556] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:548:39:\x1b[m\x1b[K   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[1.762663] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:701:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Alloc = std::allocator<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.762777] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:717:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.762887] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher_factory.hpp:76:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::PublisherFactory rclcpp::create_publisher_factory(const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.763004] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/create_publisher.hpp:59:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<PublisherT> rclcpp::create_publisher(NodeT&, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.763114] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:76:68:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.763231] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:32:96:\x1b[m\x1b[K   required from here\n'}
[1.763342] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/allocator/allocator_common.hpp:39:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid conversion from \xe2\x80\x98\x1b[01m\x1b[Kstd::allocator_traits<std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()> >::pointer\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::Twist_<std::allocator<void> > (*)()\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kvoid*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[1.763455] (challenge) StderrLine: {'line': b'   39 |   return \x1b[01;31m\x1b[Kstd::allocator_traits<Alloc>::allocate(*typed_allocator, size)\x1b[m\x1b[K;\n'}
[1.763561] (challenge) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.763726] (challenge) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K|\x1b[m\x1b[K\n'}
[1.763862] (challenge) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[Kstd::allocator_traits<std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()> >::pointer {aka geometry_msgs::msg::Twist_<std::allocator<void> > (*)()}\x1b[m\x1b[K\n'}
[1.763974] (challenge) StderrLine: {'line': b'/opt/ros/foxy/include/rclcpp/allocator/allocator_common.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::allocator::retyped_deallocate(void*, void*) [with T = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.764083] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/allocator/allocator_common.hpp:76:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krcl_allocator_t rclcpp::allocator::get_rcl_allocator(Alloc&) [with T = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>; typename std::enable_if<(! std::is_same<Alloc, std::allocator<void> >::value)>::type* <anonymous> = 0; rcl_allocator_t = rcutils_allocator_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764197] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher_options.hpp:78:70:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krcl_publisher_options_t rclcpp::PublisherOptionsWithAllocator<Allocator>::to_rcl_publisher_options(const rclcpp::QoS&) const [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Allocator = std::allocator<void>; rcl_publisher_options_t = rcl_publisher_options_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764306] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:84:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<MessageT, AllocatorT>::Publisher(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764415] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:146:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764529] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:483:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764650] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:548:39:\x1b[m\x1b[K   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[1.764761] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:701:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Alloc = std::allocator<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764874] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:717:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764988] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher_factory.hpp:76:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::PublisherFactory rclcpp::create_publisher_factory(const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.765098] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/create_publisher.hpp:59:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<PublisherT> rclcpp::create_publisher(NodeT&, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.765208] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:76:68:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.765321] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:32:96:\x1b[m\x1b[K   required from here\n'}
[1.765428] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/allocator/allocator_common.hpp:49:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid static_cast from type \xe2\x80\x98\x1b[01m\x1b[Kvoid*\x1b[m\x1b[K\xe2\x80\x99 to type \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::Twist_<std::allocator<void> > (*)()\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.765536] (challenge) StderrLine: {'line': b'   49 |   auto typed_ptr = \x1b[01;31m\x1b[Kstatic_cast<T *>(untyped_pointer)\x1b[m\x1b[K;\n'}
[1.765642] (challenge) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.765749] (challenge) StderrLine: {'line': b'/opt/ros/foxy/include/rclcpp/allocator/allocator_common.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid* rclcpp::allocator::retyped_reallocate(void*, size_t, void*) [with T = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.765858] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/allocator/allocator_common.hpp:77:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krcl_allocator_t rclcpp::allocator::get_rcl_allocator(Alloc&) [with T = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>; typename std::enable_if<(! std::is_same<Alloc, std::allocator<void> >::value)>::type* <anonymous> = 0; rcl_allocator_t = rcutils_allocator_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.765971] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher_options.hpp:78:70:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krcl_publisher_options_t rclcpp::PublisherOptionsWithAllocator<Allocator>::to_rcl_publisher_options(const rclcpp::QoS&) const [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Allocator = std::allocator<void>; rcl_publisher_options_t = rcl_publisher_options_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.766086] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:84:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<MessageT, AllocatorT>::Publisher(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.766156] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:146:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.766228] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:483:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}; _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.766296] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:548:39:\x1b[m\x1b[K   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[1.766360] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:701:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Alloc = std::allocator<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.766434] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:717:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.766499] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher_factory.hpp:76:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::PublisherFactory rclcpp::create_publisher_factory(const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.766579] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/create_publisher.hpp:59:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<PublisherT> rclcpp::create_publisher(NodeT&, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.766650] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:76:68:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.766714] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:32:96:\x1b[m\x1b[K   required from here\n'}
[1.766774] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/allocator/allocator_common.hpp:60:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid static_cast from type \xe2\x80\x98\x1b[01m\x1b[Kvoid*\x1b[m\x1b[K\xe2\x80\x99 to type \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::Twist_<std::allocator<void> > (*)()\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.766836] (challenge) StderrLine: {'line': b'   60 |   auto typed_ptr = \x1b[01;31m\x1b[Kstatic_cast<T *>(untyped_pointer)\x1b[m\x1b[K;\n'}
[1.766896] (challenge) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.766958] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/allocator/allocator_common.hpp:62:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid conversion from \xe2\x80\x98\x1b[01m\x1b[Kstd::allocator_traits<std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()> >::pointer\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::Twist_<std::allocator<void> > (*)()\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kvoid*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[1.767021] (challenge) StderrLine: {'line': b'   62 |   return \x1b[01;31m\x1b[Kstd::allocator_traits<Alloc>::allocate(*typed_allocator, size)\x1b[m\x1b[K;\n'}
[1.767080] (challenge) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.767140] (challenge) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K|\x1b[m\x1b[K\n'}
[1.767199] (challenge) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[Kstd::allocator_traits<std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()> >::pointer {aka geometry_msgs::msg::Twist_<std::allocator<void> > (*)()}\x1b[m\x1b[K\n'}
[1.770685] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[1.770848] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[1.770915] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/string:41\x1b[m\x1b[K,\n'}
[1.770981] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/stdexcept:39\x1b[m\x1b[K,\n'}
[1.771047] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/array:39\x1b[m\x1b[K,\n'}
[1.771109] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/tuple:39\x1b[m\x1b[K,\n'}
[1.771170] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/functional:54\x1b[m\x1b[K,\n'}
[1.771231] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:3\x1b[m\x1b[K:\n'}
[1.771293] (challenge) StderrLine: {'line': b'/usr/include/c++/9/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[K_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >(); __gnu_cxx::new_allocator<_Tp>::pointer = geometry_msgs::msg::Twist_<std::allocator<void> > (*)(); __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.771358] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:443:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >(); std::allocator_traits<std::allocator<_CharT> >::pointer = geometry_msgs::msg::Twist_<std::allocator<void> > (*)(); std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>; std::allocator_traits<std::allocator<_CharT> >::size_type = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.771430] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/allocator/allocator_common.hpp:39:48:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid* rclcpp::allocator::retyped_allocate(size_t, void*) [with Alloc = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>; size_t = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.771499] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/allocator/allocator_common.hpp:75:26:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krcl_allocator_t rclcpp::allocator::get_rcl_allocator(Alloc&) [with T = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>; typename std::enable_if<(! std::is_same<Alloc, std::allocator<void> >::value)>::type* <anonymous> = 0; rcl_allocator_t = rcutils_allocator_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.771564] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher_options.hpp:78:70:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krcl_publisher_options_t rclcpp::PublisherOptionsWithAllocator<Allocator>::to_rcl_publisher_options(const rclcpp::QoS&) const [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Allocator = std::allocator<void>; rcl_publisher_options_t = rcl_publisher_options_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.771629] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:84:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<MessageT, AllocatorT>::Publisher(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.771746] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:146:4:\x1b[m\x1b[K   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[1.771809] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:701:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Alloc = std::allocator<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.771890] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:717:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<std::allocator<void> >&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.771956] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher_factory.hpp:76:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::PublisherFactory rclcpp::create_publisher_factory(const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.772020] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/create_publisher.hpp:59:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<PublisherT> rclcpp::create_publisher(NodeT&, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.772085] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:76:68:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.772161] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:32:96:\x1b[m\x1b[K   required from here\n'}
[1.772223] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:114:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid static_cast from type \xe2\x80\x98\x1b[01m\x1b[Kvoid*\x1b[m\x1b[K\xe2\x80\x99 to type \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::Twist_<std::allocator<void> > (*)()\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.772287] (challenge) StderrLine: {'line': b'  114 |  return \x1b[01;31m\x1b[Kstatic_cast<_Tp*>(::operator new(__n * sizeof(_Tp)))\x1b[m\x1b[K;\n'}
[1.772348] (challenge) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.803895] (-) TimerEvent: {}
[1.863199] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[1.863437] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[1.863535] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[1.863614] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[1.863710] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.863787] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.863859] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[1.863932] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[1.864004] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.864077] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[1.864149] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:10\x1b[m\x1b[K:\n'}
[1.864221] (challenge) StderrLine: {'line': b'/opt/ros/foxy/include/rclcpp/publisher.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::do_inter_process_publish(const MessageT&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.864297] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:188:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.864390] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:185:3:\x1b[m\x1b[K   required from here\n'}
[1.864462] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:282:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid conversion from \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::Twist_<std::allocator<void> > (*)()\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst void*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[1.864537] (challenge) StderrLine: {'line': b'  282 |     auto status = \x1b[01;31m\x1b[Krcl_publish(publisher_handle_.get(), &msg, nullptr)\x1b[m\x1b[K;\n'}
[1.864608] (challenge) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.864680] (challenge) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K|\x1b[m\x1b[K\n'}
[1.864752] (challenge) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[Kgeometry_msgs::msg::Twist_<std::allocator<void> > (*)()\x1b[m\x1b[K\n'}
[1.864830] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rcl/event.h:25\x1b[m\x1b[K,\n'}
[1.864903] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rcl/wait.h:32\x1b[m\x1b[K,\n'}
[1.864975] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor.hpp:30\x1b[m\x1b[K,\n'}
[1.865052] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[1.865132] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.865204] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[1.865276] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:10\x1b[m\x1b[K:\n'}
[1.865348] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rcl/publisher.h:323:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  initializing argument 2 of \xe2\x80\x98\x1b[01m\x1b[Krcl_ret_t rcl_publish(const rcl_publisher_t*, const void*, rmw_publisher_allocation_t*)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.865422] (challenge) StderrLine: {'line': b'  323 |   \x1b[01;36m\x1b[Kconst void * ros_message\x1b[m\x1b[K,\n'}
[1.865494] (challenge) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.879957] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:80\x1b[m\x1b[K,\n'}
[1.880106] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:4\x1b[m\x1b[K:\n'}
[1.880186] (challenge) StderrLine: {'line': b'/usr/include/c++/9/bits/unique_ptr.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >()]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.880260] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/unique_ptr.h:292:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >(); _Dp = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.880334] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:201:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.880422] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:185:3:\x1b[m\x1b[K   required from here\n'}
[1.880493] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/unique_ptr.h:81:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot delete a function.  Only pointer-to-objects are valid arguments to \xe2\x80\x98\x1b[01m\x1b[Kdelete\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.880568] (challenge) StderrLine: {'line': b'   81 |  \x1b[01;31m\x1b[Kdelete\x1b[m\x1b[K __ptr;\n'}
[1.880636] (challenge) StderrLine: {'line': b'      |  \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.881634] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[1.881741] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[1.881820] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/string:41\x1b[m\x1b[K,\n'}
[1.881893] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/stdexcept:39\x1b[m\x1b[K,\n'}
[1.881964] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/array:39\x1b[m\x1b[K,\n'}
[1.882032] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/tuple:39\x1b[m\x1b[K,\n'}
[1.882100] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/functional:54\x1b[m\x1b[K,\n'}
[1.882168] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:3\x1b[m\x1b[K:\n'}
[1.882236] (challenge) StderrLine: {'line': b'/usr/include/c++/9/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = geometry_msgs::msg::Twist_<std::allocator<void> >(); _Args = {geometry_msgs::msg::Twist_<std::allocator<void> > (&)()}; _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >()]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.882309] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:483:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = geometry_msgs::msg::Twist_<std::allocator<void> >(); _Args = {geometry_msgs::msg::Twist_<std::allocator<void> > (&)()}; _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >(); std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.882394] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:220:38:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const MessageT&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.882464] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:209:3:\x1b[m\x1b[K   required from here\n'}
[1.882533] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:146:4:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Knew cannot be applied to a function type\n'}
[1.882600] (challenge) StderrLine: {'line': b'  146 |  { \x1b[01;31m\x1b[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)\x1b[m\x1b[K; }\n'}
[1.882668] (challenge) StderrLine: {'line': b'      |    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.904032] (-) TimerEvent: {}
[1.922783] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_base.hpp:29\x1b[m\x1b[K,\n'}
[1.923115] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:26\x1b[m\x1b[K,\n'}
[1.923211] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.923310] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[1.923388] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.923464] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.923540] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[1.923615] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[1.923706] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.923787] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[1.923864] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:10\x1b[m\x1b[K:\n'}
[1.923939] (challenge) StderrLine: {'line': b'/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::AnySubscriptionCallback<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.924016] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/experimental/subscription_intra_process.hpp:169:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::experimental::SubscriptionIntraProcess<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<void>, std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>, geometry_msgs::msg::Twist_<std::allocator<void> >()>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.924096] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/experimental/intra_process_manager.hpp:373:19:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::experimental::IntraProcessManager::add_shared_msg_to_buffers(std::shared_ptr<const _Tp>, std::vector<long unsigned int>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<void>; Deleter = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.924176] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/experimental/intra_process_manager.hpp:267:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const _Tp> rclcpp::experimental::IntraProcessManager::do_intra_process_publish_and_return_shared(uint64_t, std::unique_ptr<MessageT, MessageDeleter>, std::shared_ptr<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<void>; Deleter = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>; uint64_t = long unsigned int; typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.924261] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:365:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const _Tp> rclcpp::Publisher<MessageT, AllocatorT>::do_intra_process_publish_and_return_shared(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.924362] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:201:31:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.924454] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:185:3:\x1b[m\x1b[K   required from here\n'}
[1.924530] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:111:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<geometry_msgs::msg::Twist_<std::allocator<void> >()>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<geometry_msgs::msg::Twist_<std::allocator<void> >()>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.924621] (challenge) StderrLine: {'line': b'  111 |   void \x1b[01;31m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[1.924696] (challenge) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.924771] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<geometry_msgs::msg::Twist_<std::allocator<void> >()>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.924867] (challenge) StderrLine: {'line': b'   83 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[1.924942] (challenge) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.925016] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:125:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<geometry_msgs::msg::Twist_<std::allocator<void> >()>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<geometry_msgs::msg::Twist_<std::allocator<void> >()>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.925109] (challenge) StderrLine: {'line': b'  125 |   void \x1b[01;31m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[1.925185] (challenge) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.925260] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<geometry_msgs::msg::Twist_<std::allocator<void> >()>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.925341] (challenge) StderrLine: {'line': b'   97 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[1.925415] (challenge) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.004171] (-) TimerEvent: {}
[2.104481] (-) TimerEvent: {}
[2.159789] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/bits/stl_iterator.h:66\x1b[m\x1b[K,\n'}
[2.160026] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/stl_algobase.h:67\x1b[m\x1b[K,\n'}
[2.160119] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/char_traits.h:39\x1b[m\x1b[K,\n'}
[2.160200] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/string:40\x1b[m\x1b[K,\n'}
[2.160290] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/stdexcept:39\x1b[m\x1b[K,\n'}
[2.160367] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/array:39\x1b[m\x1b[K,\n'}
[2.160445] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/tuple:39\x1b[m\x1b[K,\n'}
[2.160521] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/functional:54\x1b[m\x1b[K,\n'}
[2.160596] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:3\x1b[m\x1b[K:\n'}
[2.160673] (challenge) StderrLine: {'line': b'/usr/include/c++/9/bits/ptr_traits.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kconstexpr _Tp* std::__to_address(_Tp*) [with _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >()]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.160751] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1206:29:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = geometry_msgs::msg::Twist_<std::allocator<void> >(); _Del = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>; <template-parameter-2-3> = void; _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >(); __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.160831] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:291:36:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = geometry_msgs::msg::Twist_<std::allocator<void> >(); _Del = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>; <template-parameter-2-3> = void; _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >()]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.160921] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/experimental/intra_process_manager.hpp:265:33:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const _Tp> rclcpp::experimental::IntraProcessManager::do_intra_process_publish_and_return_shared(uint64_t, std::unique_ptr<MessageT, MessageDeleter>, std::shared_ptr<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<void>; Deleter = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>; uint64_t = long unsigned int; typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.161005] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:365:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const _Tp> rclcpp::Publisher<MessageT, AllocatorT>::do_intra_process_publish_and_return_shared(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.161100] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:201:31:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.161189] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:185:3:\x1b[m\x1b[K   required from here\n'}
[2.161266] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/ptr_traits.h:158:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: not a function pointer\n'}
[2.161342] (challenge) StderrLine: {'line': b'  158 |       static_assert(\x1b[01;31m\x1b[K!std::is_function<_Tp>::value\x1b[m\x1b[K, "not a function pointer");\n'}
[2.161418] (challenge) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.172743] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:56\x1b[m\x1b[K,\n'}
[2.172976] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:52\x1b[m\x1b[K,\n'}
[2.173067] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[2.173148] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:4\x1b[m\x1b[K:\n'}
[2.173292] (challenge) StderrLine: {'line': b'/usr/include/c++/9/ext/aligned_buffer.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct __gnu_cxx::__aligned_buffer<geometry_msgs::msg::Twist_<std::allocator<void> >()>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.173400] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:535:35:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::_Sp_counted_ptr_inplace<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>, __gnu_cxx::_S_atomic>::_Impl\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.173497] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:596:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::_Sp_counted_ptr_inplace<geometry_msgs::msg::Twist_<std::allocator<void> >(), std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.173626] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:676:43:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >(); _Alloc = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>; _Args = {geometry_msgs::msg::Twist_<std::allocator<void> > (&)()}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.173766] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1344:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>; _Args = {geometry_msgs::msg::Twist_<std::allocator<void> > (&)()}; _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >(); __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.173922] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:359:59:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>; _Args = {geometry_msgs::msg::Twist_<std::allocator<void> > (&)()}; _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >()]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.174024] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:701:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = geometry_msgs::msg::Twist_<std::allocator<void> >(); _Alloc = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>; _Args = {geometry_msgs::msg::Twist_<std::allocator<void> > (&)()}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.174105] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/experimental/intra_process_manager.hpp:274:74:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const _Tp> rclcpp::experimental::IntraProcessManager::do_intra_process_publish_and_return_shared(uint64_t, std::unique_ptr<MessageT, MessageDeleter>, std::shared_ptr<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); Alloc = std::allocator<void>; Deleter = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>; uint64_t = long unsigned int; typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type = std::allocator<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.174189] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:365:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const _Tp> rclcpp::Publisher<MessageT, AllocatorT>::do_intra_process_publish_and_return_shared(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.174297] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:201:31:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type = std::default_delete<geometry_msgs::msg::Twist_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.174390] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:185:3:\x1b[m\x1b[K   required from here\n'}
[2.174467] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/aligned_buffer.h:90:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcould not convert template argument \xe2\x80\x98\x1b[01m\x1b[Ksizeof (geometry_msgs::msg::Twist_<std::allocator<void> >())\x1b[m\x1b[K\xe2\x80\x99 from \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.174547] (challenge) StderrLine: {'line': b'   90 |     struct \x1b[01;31m\x1b[K__aligned_buffer\x1b[m\x1b[K\n'}
[2.174623] (challenge) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.174698] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/aligned_buffer.h:94:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcould not convert template argument \xe2\x80\x98\x1b[01m\x1b[Ksizeof (geometry_msgs::msg::Twist_<std::allocator<void> >())\x1b[m\x1b[K\xe2\x80\x99 from \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.174776] (challenge) StderrLine: {'line': b'   94 |  std::aligned_storage<sizeof(_Tp), __alignof__(_Tp)>::type \x1b[01;31m\x1b[K_M_storage\x1b[m\x1b[K;\n'}
[2.174852] (challenge) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.195988] (challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.196162] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.196251] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[2.196332] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.196409] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.196485] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[2.196560] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[2.196636] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.196711] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[2.196804] (challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/navrajb/software/software-start-here/src/challenge/src/solution.cpp:10\x1b[m\x1b[K:\n'}
[2.196883] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher_base.hpp:\x1b[m\x1b[K At global scope:\n'}
[2.196960] (challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher_base.hpp:199:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::PublisherBase::add_event_handler(const EventCallbackT&, rcl_publisher_event_type_t) [with EventCallbackT = rclcpp::Publisher<MessageT, AllocatorT>::Publisher(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; std::string = std::__cxx11::basic_string<char>]::<lambda(rclcpp::QOSOfferedIncompatibleQoSInfo&)>; rcl_publisher_event_type_t = rcl_publisher_event_type_t]\x1b[m\x1b[K\xe2\x80\x99, declared using local type \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::Publisher<MessageT, AllocatorT>::Publisher(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >(); AllocatorT = std::allocator<void>; std::string = std::__cxx11::basic_string<char>]::<lambda(rclcpp::QOSOfferedIncompatibleQoSInfo&)>\x1b[m\x1b[K\xe2\x80\x99, is used but never defined [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[2.197074] (challenge) StderrLine: {'line': b'  199 |   \x1b[01;31m\x1b[Kadd_event_handler\x1b[m\x1b[K(\n'}
[2.197150] (challenge) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.204586] (-) TimerEvent: {}
[2.304851] (-) TimerEvent: {}
[2.307332] (challenge) StderrLine: {'line': b'make[2]: *** [CMakeFiles/solution.dir/build.make:63: CMakeFiles/solution.dir/src/solution.cpp.o] Error 1\n'}
[2.307595] (challenge) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/solution.dir/all] Error 2\n'}
[2.307832] (challenge) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[2.310331] (challenge) CommandEnded: {'returncode': 2}
[2.354588] (challenge) JobEnded: {'identifier': 'challenge', 'rc': 2}
[2.365083] (-) EventReactorShutdown: {}
